[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "acer_battery"
version = "1.0.0"
description = "Ansible role for managing Acer WMI Battery module"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["ansible", "acer", "battery", "dkms", "kernel-module"]
authors = [
    { name = "YAConsult" }
]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312", "py313"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["ansible.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--verbose --cov=. --cov-report=term-missing --mypy --black"

[tool.coverage.run]
source = ["."]
branch = true
parallel = true
data_file = ".coverage"

[tool.coverage.paths]
source = [
    ".",
    ".venv/lib/python*/site-packages"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
show_missing = true
fail_under = 80

[tool.bandit]
targets = ["roles"]
exclude_dirs = [".venv", "tests"]
skips = ["B101"]  # Ignore assert statements
baseline = ".bandit.baseline"
