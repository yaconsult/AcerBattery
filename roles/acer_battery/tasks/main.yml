---
- name: Install required packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ packages[ansible_os_family] }}"
  become: true

- name: Check if acer-wmi-battery directory exists
  ansible.builtin.stat:
    path: "/usr/src/acer-wmi-battery-{{ acer_battery_version }}"
  register: module_dir

- name: Clone acer-wmi-battery repository
  ansible.builtin.git:
    repo: "{{ acer_battery_repo_url }}"
    dest: "/usr/src/acer-wmi-battery-{{ acer_battery_version }}"
    version: "master"
    update: yes
    force: yes
  register: git_clone
  when: not module_dir.stat.exists
  notify: rebuild_module
  become: true
  check_mode: no
  changed_when: not module_dir.stat.exists

- name: Update acer-wmi-battery repository
  ansible.builtin.git:
    repo: "{{ acer_battery_repo_url }}"
    dest: "/usr/src/acer-wmi-battery-{{ acer_battery_version }}"
    version: "master"
    update: yes
    force: yes
  register: git_update
  when: module_dir.stat.exists
  notify: rebuild_module
  become: true
  check_mode: no
  changed_when: false

- name: Create scripts directory
  ansible.builtin.file:
    path: "/usr/src/acer-wmi-battery-{{ acer_battery_version }}/scripts"
    state: directory
    mode: '0755'
  become: true

- name: Install module signing script
  ansible.builtin.template:
    src: scripts/sign-modules.sh.j2
    dest: "/usr/src/acer-wmi-battery-{{ acer_battery_version }}/scripts/sign-modules.sh"
    mode: '0755'
  become: true
  notify: rebuild_module

- name: Create proper Makefile for kernel module
  ansible.builtin.copy:
    dest: "/usr/src/acer-wmi-battery-{{ acer_battery_version }}/Makefile"
    content: |
      obj-m := acer-wmi-battery.o

      KVERSION := $(shell uname -r)
      KDIR := /lib/modules/$(KVERSION)/build

      PWD := $(shell pwd)

      default:
      	$(MAKE) -C $(KDIR) M=$(PWD) modules

      clean:
      	$(MAKE) -C $(KDIR) M=$(PWD) clean

      install:
      	$(MAKE) -C $(KDIR) M=$(PWD) modules_install
      	depmod -a
    mode: '0644'
  register: makefile_update
  become: true

- name: Install DKMS configuration
  ansible.builtin.template:
    src: dkms.conf.j2
    dest: "/usr/src/acer-wmi-battery-{{ acer_battery_version }}/dkms.conf"
    mode: '0644'
  register: dkms_config
  notify: rebuild_module
  become: true
  check_mode: no

- name: Register with DKMS
  ansible.builtin.command:
    cmd: "dkms add -m acer-wmi-battery -v {{ acer_battery_version }}"
  register: dkms_add
  changed_when: dkms_add.rc == 0
  failed_when: dkms_add.rc != 0 and 'already exists' not in dkms_add.stderr
  become: true
  check_mode: no

- name: Build and install with DKMS
  ansible.builtin.command:
    cmd: "dkms install -m acer-wmi-battery -v {{ acer_battery_version }}"
  register: dkms_install
  changed_when: dkms_install.rc == 0
  failed_when: dkms_install.rc != 0 and 'already installed' not in dkms_install.stderr
  notify: load_module
  become: true
  check_mode: no

- name: Check if module is loaded
  ansible.builtin.command:
    cmd: lsmod | grep -q acer_wmi_battery
  register: module_loaded
  changed_when: false
  failed_when: false

- name: Load module if not loaded
  ansible.builtin.command:
    cmd: modprobe acer_wmi_battery
  when: module_loaded.rc != 0
  register: modprobe_result
  become: true

- name: Wait for sysfs interface
  ansible.builtin.wait_for:
    path: /sys/bus/wmi/drivers/acer-wmi-battery/health_mode
    timeout: 10
  register: sysfs_wait
  ignore_errors: true

- name: Show module status
  ansible.builtin.debug:
    msg: "Module loaded successfully. Health mode interface is {% if sysfs_wait.failed %}not {% endif %}available."
